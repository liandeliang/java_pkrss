<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
    	http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<context:annotation-config />

	<context:component-scan base-package="com">
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="com.pkrss.server.constant.ServerConfig">
		<property name="locations">
			<list>
				<value>classpath:default.properties</value>
				<value>classpath:log4j.properties</value>
				<value>classpath:local.properties</value>
				<!--
				<value>classpath*:*.properties</value>
				<value>classpath:local.properties</value> -->
			</list>
		</property>
		<property name="fileEncoding">
      		<value>UTF-8</value>
    	</property>
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="driverClassName" value="${db.driver}" />
		
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxActive" value="${db.maxActive}"/>
		<property name="maxIdle" value="${db.maxIdle}"/>
		<property name="maxWait" value="${db.maxWait}"/>
				
	    <property name="minIdle" value="${druid.minIdle}" />
	   
	    <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />  
	   
	    <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />  
	    
	    <property name="validationQuery" value="${druid.validationQuery}" />  
	    <property name="testWhileIdle" value="${druid.testWhileIdle}" />  
	    <property name="testOnBorrow" value="${druid.testOnBorrow}" />  
	    <property name="testOnReturn" value="${druid.testOnReturn}" />  
	   
	    <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />  
	   
	    <property name="filters" value="${druid.filters}" />   
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <aop:aspectj-autoproxy/>
    
	<aop:config>
		<aop:advisor pointcut="execution(* com.pkrss.server..*ServiceImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
            <tx:method name="select*" read-only="true"/>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置文件上传解析器的实例MultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>4096000000</value>
		</property>
		<property name="maxInMemorySize">
			<value>12384</value>
		</property>
	</bean>
	
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean> -->

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pkrss.server.mapper" />
		<property name="markerInterface" value="tk.mybatis.mapper.common.Mapper" />
	</bean>
	
</beans>
